CREATE TABLE pets (    id SERIAL PRIMARY KEY,    name TEXT NOT NULL,    human TEXT NOT NULL);ALTER TABLE pets ENABLE ROW LEVEL SECURITY;CREATE POLICY read_pets ON pets    FOR SELECT    USING (human = current_user);
DROP table pets;
CREATE TABLE humans (    id SERIAL PRIMARY KEY,    name TEXT NOT NULL);CREATE TABLE pets (    id SERIAL PRIMARY KEY,    name TEXT NOT NULL,);CREATE TABLE humans_pets (    human_id INTEGER REFERENCES humans(id),    pet_id INTEGER REFERENCES pets(id),    PRIMARY KEY (human_id, pet_id))ALTER TABLE pets ENABLE ROW LEVEL SECURITY;CREATE index ON humans_pets(human_id, pet_id);
CREATE TABLE humans (    id SERIAL PRIMARY KEY,    name TEXT NOT NULL);
CREATE TABLE pets (    id SERIAL PRIMARY KEY,    name TEXT NOT NULL,);
CREATE TABLE pets (    id SERIAL PRIMARY KEY,    name TEXT NOT NULL);
CREATE TABLE humans_pets (    human_id INTEGER REFERENCES humans(id),    pet_id INTEGER REFERENCES pets(id),    PRIMARY KEY (human_id, pet_id))
CREATE TABLE humans_pets (    human_id INTEGER REFERENCES humans(id),    pet_id INTEGER REFERENCES pets(id),    PRIMARY KEY (human_id, pet_id));
CREATE TABLE humans_pets (    human_id INTEGER REFERENCES humans(id),    pet_id INTEGER REFERENCES pets(id),    PRIMARY KEY (human_id, pet_id));
ALTER TABLE pets ENABLE ROW LEVEL SECURITY;
CREATE index ON humans_pets(human_id, pet_id);
select * from humans;
select * from pgbench_accounts;
select * from pgbench_accounts limit 1;
select * from pgbench_accounts limit 1;
drop policy read_pets from pets;
drop policy read_pets on pets;
create policy read pets on pets for select using(exists(select 1 from humans_pets where humans_pets.pet_id = pets.id and humans_pets.human_id = 1));
create policy read_pets on pets for select using(exists(select 1 from humans_pets where humans_pets.pet_id = pets.id and humans_pets.human_id = 1));
insert into humans (name) values('cassidy');
select * from humans;
insert into pets(name) select generate_series(1, 10000), 'Pet ' || generate_series(1, 10000);
insert into pets(name) select 'Pet ' || generate_series(1, 10000);
select * from pets;
insert into humans_pets (human_id, pet_id) select 1, id from pets;
select * from humans_pets;
explain analyze select * from pets;
current_user;
select current_user;
select * from pets;
insert into pets(name) select 'Pet ' || generate_series(10000, 10000000);
insert into humans_pets (human_id, pet_id) select 2, id from pets where pets.id > 10000);
insert into humans_pets (human_id, pet_id) select 2, id from pets where pets.id > 10000);
insert into humans_pets (human_id, pet_id) select 2, id from pets where pets.id > 10000;
inssert into humans(name) values('rae');
insert into humans(name) values('rae');
insert into humans_pets (human_id, pet_id) select 2, id from pets where pets.id > 10000;
count * from pets;
select count(*) from pets;
select count(*) from pets;
select 1 from humans_pets where humans_pets.human_id = 1;
exists(select 1 from humans_pets where humans_pets.human_id = 1);
select exists(select 1 from humans_pets where humans_pets.human_id = 1);
select exists(select 1 from humans_pets where humans_pets.human_id = 2);
select exists(select 1 from humans_pets where humans_pets.human_id = 3);
select count(*) from humans_pets where humans_pets.human_id = 1;
select count(*) from humans_pets where humans_pets.human_id = 2;
select * from pets;
select * from pets limit 10;
explain analyze select * from pets limit 10;
explain analyze select * from pets inner join humans_pets on humans_pets.pet_id = pets.id where humans_pets.human_id =2 limit 1;
select * from pets inner join humans_pets on humans_pets.pet_id = pets.id where humans_pets.human_id =2 limit 1;
drop policy read_pets on pets;
create policy read_pets for select using(false);
create policy read_pets on pets for select using(false);
select * from pets limit 1;
ALTER TABLE accounts ENABLE ROW LEVEL SECURITY;
ALTER TABLE pets ENABLE ROW LEVEL SECURITY;
select * from pets limit 1;
select current_user;
select  * from pg_roles;
select  * from pg_roles;
create role policy_tester;
set session role policy_tester;
select * from pets;
set session role cassidy;
grant usage to policy_tester on postgres;
grant usage on postgres to policy_tester;
grant usage on humans to policy_tester;
grant usage on humans pets humans_pets to policy_tester;
grant usage on schema postgres to policy tester;
grant usage on schema postgres to policy_tester;
grant usage on schema public to policy_tester;
select * from pets;
select count(*) from pets;
set session role cassidy;
set session role policy_tester;
select count(*) from pets;
set session role cassidy;
grant usage on humans pets humans_pets to policy_tester;
grant select on pets to policy_tester;
grant selct on humans_pets to policy_tester;
grant select on humans_pets to policy_tester;
grant select on humans to policy_tester;
select count(*) from pets;
set session role policy_tester;
select count(*) from pets;
drop policy read_pets on pets;
set session role cassidy;
drop policy read_pets on pets;
create policy read_pets on pets for select using(exists(select 1 from humans_pets where humans_pets.pet_id = pets.id and humans_pets.human_id = 1));
set session role policy_tester;
select count(*) from pets;
explain analyze select * from pets;
set session role cassidy;
drop policy read_pets on pets;
create policy read_pets on pets for select using(pets.id in(select pet_id from humans_pets where humans_pets.human_id = 1));
set session role policy_tester;
explain analyze select * from pets;
select * from pgbench_history;
set session role policy_tester;
set session role policy_tester;
drop policy read_pets on pets;
create policy read_pets on pets for select using(exists(select 1 from humans_pets where humans_pets.pet_id = pets.id and humans_pets.human_id = 1));
